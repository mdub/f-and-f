#! /usr/bin/env ruby

$: << File.expand_path("../../lib", __FILE__)

require "clamp"
require "faith_and_farming/book"
require "yaml"

Clamp do

  option ["-f", "--from"], "PAGE", "first page", :default => 72, &method(:Integer)
  option ["-t", "--to"], "PAGE", "last page", :default => 720, &method(:Integer)
  option ["-p", "--page"], "PAGE", "only page" do |arg|
    self.from = self.to = arg
  end

  def pages
    FaithAndFarming::Book.pages(from..to)
  end

  subcommand ["blocks", "b"], "display blocks" do

    def execute
      pages.each do |page|
        puts "\nPAGE #{page.page_index}"
        page.blocks.each do |block|
          bounds = block.bounds
          puts "\nBLOCK {left #{bounds.left}, right #{bounds.right}, top #{bounds.top}, bottom #{bounds.bottom}}\n\n"
          puts block.text.gsub(/^/, "  ")
        end
      end
    end

  end

  subcommand ["elements", "e"], "display page elements" do

    def execute
      pages.each do |page|
        page.elements.each do |element|
          type_name = element.class.name.sub(/.*::/,"")
          data = {"type" => type_name}.merge(element.to_h)
          puts YAML.dump(data)
        end
      end
    end

  end

  subcommand ["names", "n"], "display entry names" do

    def execute
      pages.each do |page|
        puts "\n--- page #{page.page_index} ---"
        page.elements.each do |e|
          case e
          when FaithAndFarming::Book::Elements::Entry
            indent = "  " * (e.level - 1)
            names = e.people.map(&:name).join(" & ")
            puts "#{e.level}#{indent}- #{names}"
          end
        end
      end
    end

  end

  def run(*)
    super
  rescue Errno::EPIPE
  end

end
